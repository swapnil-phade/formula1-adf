{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"ls_adls_gen2": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_race_result_round_wise_chld')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"description": "get data from api",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"url": {
								"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_season",
						"description": "itrate through rounds",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web1').output.MRData.RaceTable.Races",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Web2_round_wise_result_2",
									"description": "get data from api",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'/',item().round,'/','results.json')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable_round_wise_result",
									"description": "write race result to string type varible",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Web2_round_wise_result_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "race_result",
										"value": {
											"value": "@{activity('Web2_round_wise_result_2').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data_round_wise",
									"description": "copy data data from api to adls",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable_round_wise_result",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set variable_season_value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "mycol",
													"value": {
														"value": "@variables('race_result')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_data",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_season_round_wise_data",
											"type": "DatasetReference",
											"parameters": {
												"year_name": {
													"value": "@variables('file_name_season')",
													"type": "Expression"
												},
												"round": {
													"value": "@item().round",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable_season_value",
									"description": "write season value in one variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name_season",
										"value": {
											"value": "@pipeline().parameters.season_value_parameter",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"season_value_parameter": {
						"type": "string"
					}
				},
				"variables": {
					"race_result": {
						"type": "String"
					},
					"file_name_season": {
						"type": "String"
					},
					"season_data_only": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T19:14:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_season_round_wise_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_adls_gen2')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "templet.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "swapnil",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_season_round_wise_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_adls_gen2')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_name": {
						"type": "string"
					},
					"round": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().year_name,'_',dataset().round,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Results','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}